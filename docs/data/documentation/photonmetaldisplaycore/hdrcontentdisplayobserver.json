{"kind":"symbol","identifier":{"url":"doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore\/HDRContentDisplayObserver","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An observer to detech whether to disable HDR display or not in iOS."}],"metadata":{"role":"symbol","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HDRContentDisplayObserver"}],"title":"HDRContentDisplayObserver","modules":[{"name":"PhotonMetalDisplayCore"}],"externalID":"s:22PhotonMetalDisplayCore010HDRContentC8ObserverC","navigatorTitle":[{"text":"HDRContentDisplayObserver","kind":"identifier"}],"roleHeading":"Class"},"hierarchy":{"paths":[["doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HDRContentDisplayObserver"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the app is in inactive or in background, the observer will change the maximum dynamic range to SDR."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can either observe in the closure passed in the initializer or by checking the "},{"type":"codeVoice","code":"maximumDynamicRange"},{"type":"text","text":" property."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Define this variable in the class scope.","private var observer: HDRContentDisplayObserver!","","\/\/ Construct the observer and keep strong reference to it.","observer = HDRContentDisplayObserver { [weak self] range in","    guard let self else { return }","","    \/\/ If the range is .sdr, then you need to set the dynamic range to SDR accordingly.","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get the current maximum dynamic range, you can access the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore\/HDRContentDisplayObserver\/maximumDynamicRange"},{"type":"text","text":" property."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On macOS, this class wonâ€™t perform any actions because its lifecycle differs from iOS."}]}],"name":"Note"}],"kind":"content"}],"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore\/HDRContentDisplayObserver\/init(displayModeChanged:)"]},{"generated":true,"identifiers":["doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore\/HDRContentDisplayObserver\/maximumDynamicRange"],"title":"Instance Properties","anchor":"Instance-Properties"}],"variants":[{"paths":["\/documentation\/photonmetaldisplaycore\/hdrcontentdisplayobserver"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"metal-icon.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/PhotonMetalDisplayCore\/metal-icon.png","traits":["1x","light"]}],"identifier":"metal-icon.png"},"doc://PhotonMetalDisplayCore/documentation/PhotonMetalDisplayCore":{"kind":"symbol","url":"\/documentation\/photonmetaldisplaycore","abstract":[{"type":"text","text":"A simple Swift Package to help you render CIImage from Core Image in a MTKView in SwiftUI, supporting some other features like HDR rendering."}],"images":[{"type":"icon","identifier":"metal-icon.png"}],"role":"collection","identifier":"doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore","type":"topic","title":"PhotonMetalDisplayCore"},"doc://PhotonMetalDisplayCore/documentation/PhotonMetalDisplayCore/HDRContentDisplayObserver/maximumDynamicRange":{"kind":"symbol","role":"symbol","url":"\/documentation\/photonmetaldisplaycore\/hdrcontentdisplayobserver\/maximumdynamicrange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"maximumDynamicRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"MetalDynamicRange","preciseIdentifier":"s:22PhotonMetalDisplayCore0B12DynamicRangeO","kind":"typeIdentifier"}],"identifier":"doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore\/HDRContentDisplayObserver\/maximumDynamicRange","title":"maximumDynamicRange","type":"topic","abstract":[{"text":"The current maximum dynamic range supported currently.","type":"text"}]},"doc://PhotonMetalDisplayCore/documentation/PhotonMetalDisplayCore/HDRContentDisplayObserver":{"role":"symbol","url":"\/documentation\/photonmetaldisplaycore\/hdrcontentdisplayobserver","abstract":[{"text":"An observer to detech whether to disable HDR display or not in iOS.","type":"text"}],"type":"topic","identifier":"doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore\/HDRContentDisplayObserver","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"HDRContentDisplayObserver","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HDRContentDisplayObserver","kind":"identifier"}],"title":"HDRContentDisplayObserver"},"doc://PhotonMetalDisplayCore/documentation/PhotonMetalDisplayCore/HDRContentDisplayObserver/init(displayModeChanged:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/photonmetaldisplaycore\/hdrcontentdisplayobserver\/init(displaymodechanged:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"displayModeChanged","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"MetalDynamicRange","preciseIdentifier":"s:22PhotonMetalDisplayCore0B12DynamicRangeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/PhotonMetalDisplayCore\/documentation\/PhotonMetalDisplayCore\/HDRContentDisplayObserver\/init(displayModeChanged:)","title":"init(displayModeChanged:)","type":"topic","abstract":[{"text":"Initialize the observer with the given closure.","type":"text"}]}}}